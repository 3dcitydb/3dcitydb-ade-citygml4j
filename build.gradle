import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
}

apply from: 'properties.gradle'

group 'org.citydb.ade'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

sourceSets {
    main.java.srcDir 'src-gen/main/java'
}

dependencies {
    api 'org.citygml4j:citygml4j:2.8.0'
}

task processLicense(type: Copy) {
    from("$rootDir/resources/license/LICENSE.txt") {
        filteringCharset = 'UTF-8'
        filter(ReplaceTokens, tokens: [
                name: project.name
        ])
    }
    into "$buildDir/tmp/license"
}

javadoc {
    options.overview "$buildDir/tmp/javadoc/overview.html"
    options.addStringOption('doctitle', project.name + ' - ' + project.version)
    options.addStringOption('Xdoclint:none', '-quiet')

    doFirst {
        copy {
            from("$rootDir/resources/javadoc/overview.html") {
                filteringCharset = 'UTF-8'
                filter(ReplaceTokens, tokens: [
                        name: project.name,
                        version: project.version,
                        citydbName: project.citydbName,
                        citydbWebsiteUrl: project.citydbWebsiteUrl,
                        vendorName: project.vendorName,
                        vendorOrganisation: project.vendorOrganisation,
                        vendorCountry: project.vendorCountry,
                        vendorCopyright: project.vendorCopyright,
                        vendorWebsiteUrl: project.vendorWebsiteUrl
                ])
            }
            into "$buildDir/tmp/javadoc"
        }
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': project.vendorName + ', ' + project.vendorOrganisation
        )
    }
    into('META-INF') {
        from 'resources/license/APACHE-2.0.txt'
        from processLicense
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = project.name
                url = project.vcsUrl
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    url = project.vcsUrl
                    connection = 'scm:git:' + project.git
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        userOrg = '3dcitydb'
        name = project.name
        websiteUrl = project.vcsUrl
        vcsUrl = project.git
        issueTrackerUrl = project.issueTrackerUrl
        licenses = ['Apache-2.0']
        version {
            name = project.version
        }
    }
}